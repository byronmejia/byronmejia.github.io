{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/atomics/seo.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_atomics_seo__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","title","SEO","_ref","description","lang","meta","keywords","author","image","audio","video","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","_ref2","site","metaTitle","siteMetadata","metaDescription","metaAuthor","metaKeywords","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","data","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAYeO,UAR+B,kBAC1CH,EAAAI,EAAAC,cAAA,WACIL,EAAAI,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXN,EAAAI,EAAAC,cAAA,uBACAL,EAAAI,EAAAC,cAAA,kJCyBFE,EAAuC,SAAAC,GAAA,IACzCC,EADyCD,EACzCC,YACAC,EAFyCF,EAEzCE,KACAC,EAHyCH,EAGzCG,KACAC,EAJyCJ,EAIzCI,SACAN,EALyCE,EAKzCF,MACAO,EANyCL,EAMzCK,OACAC,EAPyCN,EAOzCM,MACAC,EARyCP,EAQzCO,MACAC,EATyCR,EASzCQ,MATyC,OAWzCC,EAAAb,EAAAC,cAACa,EAAA,YAAD,CACIC,MAzCU,aA0CVC,OAAQ,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACDC,EAAYjB,GAASgB,EAAKE,aAAalB,MACvCmB,EAAkBhB,GAAea,EAAKE,aAAaf,YACnDiB,EAAab,GAAUS,EAAKE,aAAaX,OACzCc,EAAef,GAAYU,EAAKE,aAAaZ,SACnD,OACIK,EAAAb,EAAAC,cAACuB,EAAAxB,EAAD,CACIyB,eAAgB,CACZnB,QAEJJ,MAAOiB,EACPO,cAAa,QAAUR,EAAKE,aAAalB,MACzCK,KAAM,CACF,CACIoB,KAAI,cACJC,QAASP,GAEb,CACIQ,SAAQ,WACRD,QAAST,GAEb,CACIU,SAAQ,iBACRD,QAASP,GAEb,CACIQ,SAAQ,UACRD,QAAO,WAEX,CACID,KAAI,eACJC,QAAO,WAEX,CACID,KAAI,kBACJC,QAASN,GAEb,CACIK,KAAI,gBACJC,QAAST,GAEb,CACIQ,KAAI,sBACJC,QAASP,IAGZS,OACGP,EAAaQ,OAAS,EAChB,CACIJ,KAAI,WACJC,QAASL,EAAaS,KAAb,OAEb,IAETF,OACGpB,EACM,CACI,CACImB,SAAQ,WACRD,QAASlB,GAEb,CACImB,SAAQ,iBACRD,QAAO,QAEX,CACIC,SAAQ,kBACRD,QAAO,QAGf,IAETE,OACGnB,EACM,CACIkB,SAAQ,WACRD,QAASjB,GAEb,IAETmB,OACGlB,EACM,CACIiB,SAAQ,WACRD,QAAShB,GAEb,IAETkB,OAAOvB,MA1F5B0B,KAAAC,KAiGJ/B,EAAIgC,aAAe,CACf7B,KAAI,KACJC,KAAM,GACNC,SAAU,IAGCL","file":"component---src-pages-404-tsx-84ec7e9b08ec2a3da1d7.js","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport SEO from '../components/atomics/seo';\n\nconst NotFoundPage: FunctionComponent<void> = () => (\n    <div>\n        <SEO title='404: Not found' />\n        <h1>NOT FOUND</h1>\n        <p>You just hit a route that doesn't exist...</p>\n    </div>\n);\n\nexport default NotFoundPage;\n","import React, { FunctionComponent } from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n\nexport interface SEOPropTypes {\n    audio?: string;\n    author?: string;\n    description?: string;\n    image?: string;\n    keywords?: string[];\n    lang?: string;\n    // tslint:disable-next-line:no-any\n    meta?: any[];\n    title: string;\n    video?: string;\n}\n\n// tslint:disable-next-line:no-commented-code\n// tslint:disable:jsx-no-lambda\n// tslint:disable:no-use-before-declare\n// tslint:disable:jsx-no-multiline-js\nconst SEO: FunctionComponent<SEOPropTypes> = ({\n    description,\n    lang,\n    meta,\n    keywords,\n    title,\n    author,\n    image,\n    audio,\n    video,\n}: SEOPropTypes) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={({ site }) => {\n            const metaTitle = title || site.siteMetadata.title;\n            const metaDescription = description || site.siteMetadata.description;\n            const metaAuthor = author || site.siteMetadata.author;\n            const metaKeywords = keywords || site.siteMetadata.keywords;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang,\n                    }}\n                    title={metaTitle}\n                    titleTemplate={`%s | ${site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: `description`,\n                            content: metaDescription,\n                        },\n                        {\n                            property: `og:title`,\n                            content: metaTitle,\n                        },\n                        {\n                            property: `og:description`,\n                            content: metaDescription,\n                        },\n                        {\n                            property: `og:type`,\n                            content: `website`,\n                        },\n                        {\n                            name: `twitter:card`,\n                            content: `summary`,\n                        },\n                        {\n                            name: `twitter:creator`,\n                            content: metaAuthor,\n                        },\n                        {\n                            name: `twitter:title`,\n                            content: metaTitle,\n                        },\n                        {\n                            name: `twitter:description`,\n                            content: metaDescription,\n                        },\n                    ]\n                        .concat(\n                            metaKeywords.length > 0\n                                ? {\n                                      name: `keywords`,\n                                      content: metaKeywords.join(`, `),\n                                  }\n                                : []\n                        )\n                        .concat(\n                            image\n                                ? [\n                                      {\n                                          property: `og:image`,\n                                          content: image,\n                                      },\n                                      {\n                                          property: `og:image:width`,\n                                          content: `1200`,\n                                      },\n                                      {\n                                          property: `og:image:height`,\n                                          content: `630`,\n                                      },\n                                  ]\n                                : []\n                        )\n                        .concat(\n                            audio\n                                ? {\n                                      property: `og:audio`,\n                                      content: audio,\n                                  }\n                                : []\n                        )\n                        .concat(\n                            video\n                                ? {\n                                      property: `og:video`,\n                                      content: video,\n                                  }\n                                : []\n                        )\n                        .concat(meta!)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n};\n\nexport default SEO;\n"],"sourceRoot":""}